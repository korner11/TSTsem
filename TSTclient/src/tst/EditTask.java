/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package tst;

import Entity.Task;
import java.awt.EventQueue;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JFormattedTextField;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerDateModel;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpPatch;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClientBuilder;
import org.json.simple.JSONObject;

/**
 *
 * @author Michal
 */
public class EditTask extends javax.swing.JFrame {

    Task task;
    String username;
    CloseableHttpClient httpClient;
    Client client;
    
    /**
     * Creates new form NewTask
     * @param task
     */
    public EditTask(Task task,Client client,String username) {
        initComponents();
        this.task=task;
        initHttpClient();
        this.client=client;
        this.username=username;
        initTask();
    }
 private void initHttpClient(){
           httpClient = HttpClientBuilder.create().build();   
   }
    
    private void initTask(){
        txtTitle.setText(task.getName());
        txtDescription.setText(task.getDescription());
        txtDate.setDate(task.getTaskDate());
        txtTimeH.setValue(task.getTaskTime());
      
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtTitle = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        lblDescription = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        txtDate = new org.jdesktop.swingx.JXDatePicker();
        lblDate = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        String PATTERN = "HH:mm";
        Calendar c = Calendar.getInstance();
        c.setTimeInMillis(60*1000);
        Date value = c.getTime();

        SpinnerDateModel m = new SpinnerDateModel(
            value, null, null, Calendar.MINUTE);
        txtTimeH = new javax.swing.JSpinner(m);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblTitle.setText("Title");

        lblDescription.setText("Desciption");

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        jScrollPane1.setViewportView(txtDescription);

        lblDate.setText("Date");

        lblTime.setText("Time");

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        txtTimeH.setEditor(new JSpinner.DateEditor(txtTimeH, PATTERN));
        JSpinner sp2 = new JSpinner(m);
        final JSpinner.DateEditor editor =
        new JSpinner.DateEditor(sp2, PATTERN);
        sp2.setEditor(editor);
        editor.getTextField().addFocusListener(new FocusAdapter() {
            @Override public void focusGained(FocusEvent e) {
                EventQueue.invokeLater(new Runnable() {
                    @Override public void run() {
                        JTextField f = editor.getTextField();
                        int i = f.getText().lastIndexOf(":");
                        f.select(i+1, i+3);
                    }
                });
            }
        });

        JFormattedTextField ampmspin=((JSpinner.DefaultEditor)txtTimeH.getEditor()).getTextF‌​ield();
        ampmspin.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
                            .addComponent(txtTitle)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTimeH, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(77, 77, 77))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTitle))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDescription)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDate))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTime)
                    .addComponent(txtTimeH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(58, 58, 58))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         try {
            int code= saveTask("http://localhost:8080/"+username+"/tasks/"+ task.getId());
            if(code == 200){
                this.dispose();
                message("","Task was updated");
            }
            else{
                message("Error","Task was not updated");
            }
        } catch (IOException ex) {
           message("Error","Cloud not conncect to server");
        } 
    }//GEN-LAST:event_jButton1ActionPerformed

      private int saveTask(String url) throws IOException{      
            int code=0;       
            HttpPatch request = new HttpPatch(url);
            request.setHeader("content-type", "application/json");    
            JSONObject obj = new JSONObject();
            obj.put("name", txtTitle.getText());
            obj.put("description", txtDescription.getText());
            Object strTime=txtTimeH.getValue();
            
            Date date = (Date) strTime;
            DateFormat dateFormat = new SimpleDateFormat("HH:mm:ss");     
            obj.put("taskTime",dateFormat.format(date));
            
            date = txtDate.getDate();
            dateFormat = new SimpleDateFormat("yyyy-MM-dd");       
            obj.put("taskDate",dateFormat.format(date));
            //System.out.println(obj.toJSONString());
            StringEntity params=new StringEntity(obj.toJSONString());
            request.setEntity(params);
            HttpResponse response = httpClient.execute(request);
            System.out.println("Response Code : "+ response.getStatusLine().getStatusCode());
            code=Integer.valueOf(response.getStatusLine().getStatusCode());      
            client.refreshTasks();
            return code;
    }
    
    private void message(String title, String message){
    MessageDialog msg= new MessageDialog(title,message);
            java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                msg.setVisible(true);              
            }
            });
    }
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTitle;
    private org.jdesktop.swingx.JXDatePicker txtDate;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JSpinner txtTimeH;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables
}
